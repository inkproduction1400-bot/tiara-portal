openapi: 3.0.3
info:
  title: Tiara Portal API
  version: 0.1.0
servers:
  - url: http://localhost:3000
paths:
  /api/casts:
    get:
      summary: List casts
      parameters:
        - in: query; name: page; schema: { type: integer, minimum: 1, default: 1 }
        - in: query; name: limit; schema: { type: integer, minimum: 1, maximum: 100, default: 30 }
        - in: query; name: keyword; schema: { type: string }
        - in: query; name: owner; schema: { type: string }
        - in: query; name: genre; schema: { type: string }
        - in: query; name: drinkable; schema: { type: boolean }
        - in: query; name: wage_min; schema: { type: number }
        - in: query; name: sort; schema: { type: string }
      responses:
        "200": { description: OK }
        "400": { description: Validation error }
  /api/stores:
    get:
      summary: List stores
      parameters:
        - in: query; name: page; schema: { type: integer, default: 1 }
        - in: query; name: limit; schema: { type: integer, default: 30 }
        - in: query; name: keyword; schema: { type: string }
        - in: query; name: active; schema: { type: boolean }
        - in: query; name: sort; schema: { type: string }
      responses:
        "200": { description: OK }
        "400": { description: Validation error }
  /api/shifts:
    get:
      summary: List shifts
      parameters:
        - in: query; name: page; schema: { type: integer, default: 1 }
        - in: query; name: limit; schema: { type: integer, default: 30 }
        - in: query; name: sort; schema: { type: string }
        - in: query; name: store_id; schema: { type: string, format: uuid }
        - in: query; name: cast_id;  schema: { type: string, format: uuid }
        - in: query; name: status;   schema: { type: string, enum: [scheduled, confirmed, canceled, finished] }
        - in: query; name: role;     schema: { type: string, enum: [cast] }
        - in: query; name: from;     schema: { type: string, format: date-time }
        - in: query; name: to;       schema: { type: string, format: date-time }
        - in: query; name: expand;   schema: { type: string, enum: [names] }
      responses:
        "200": { description: OK }
        "400": { description: Validation error }
